LOCALS

.model small

.stack 1000h

.data
    ; ?????????
    MAX_BUFFER_LEN      EQU     200       ; ???????????? ?????? ??????
    MAX_WORD_LEN        EQU     50        ; ???????????? ????? ?????

    ; ???????-??????????? ????
    DelimChars          db      '.,!?;:"() ', "'"
    LenDelimChars       dw      $-DelimChars

    ; ??????????
    CrLf                db      0Dh, 0Ah, '$'   ; ??????? ??????
    msgSourceString     db      'In string:', 0Dh, 0Ah, '$'
    Result              db      0Dh, 0Ah, 'Out string:', 0Dh, 0Ah, '$'
    asEnterString       db      0Dh, 0Ah, 'Enter a string:', 0Dh, 0Ah, '$'
    asEnterPattern      db      0Dh, 0Ah, 'Enter a pattern word:', 0Dh, 0Ah, '$'
    asEnterInsWord      db      0Dh, 0Ah, 'Enter an inserting word:', 0Dh, 0Ah, '$'

.data?
    ; ?????? ??? ????????????
    kbdString       label   byte
        Len         dw      ?
        String      db      MAX_BUFFER_LEN dup(?)

    ; ??????? ?????
    kbdPattern      label   byte
        PatternLen  dw      ?
        Pattern     db      MAX_WORD_LEN dup(?)

    ; ??????????? ?????
    kbdInsWord      label   byte
        InsWordLen  dw      ?
        InsWord     db      MAX_WORD_LEN dup(?)

.code

main proc
    mov     ax, @data
    mov     ds, ax

    ; ???? ?????????????? ??????
    mov     ah, 09h
    lea     dx, [asEnterString]
    int     21h
    mov     [Len], MAX_BUFFER_LEN
    mov     ah, 0Ah
    lea     dx, [kbdString]
    int     21h
    xor     ax, ax
    mov     al, byte ptr [Len + 1]
    mov     [Len], ax

    ; ???? ???????? ?????
    mov     ah, 09h
    lea     dx, [asEnterPattern]
    int     21h
    mov     [PatternLen], MAX_WORD_LEN
    mov     ah, 0Ah
    lea     dx, [kbdPattern]
    int     21h
    xor     ax, ax
    mov     al, byte ptr [PatternLen + 1]
    mov     [PatternLen], ax

    ; ???? ??????????? ??????
    mov     ah, 09h
    lea     dx, [asEnterInsWord]
    int     21h
    mov     [InsWordLen], MAX_WORD_LEN
    mov     ah, 0Ah
    lea     dx, [kbdInsWord]
    int     21h
    xor     ax, ax
    mov     al, byte ptr [InsWordLen + 1]
    mov     [InsWordLen], ax

    ; ?????????? ??????? ? ????? ???????????? ?????
    mov     bx, [InsWordLen]
    lea     si, [InsWord]
    mov     [si + bx], byte ptr ' '
    inc     [InsWordLen]
 
        mov     ah,     09h
        lea     dx,     [msgSourceString]
        int     21h
 
        mov     ah,     40h
        lea     dx,     [String]
        mov     bx,     1
        mov     cx,     [Len]
        int     21h
 
        mov     ah,     09h
        lea     dx,     [CrLf]
        int     21h
 
        lea     si,     [String]
        mov     cx,     [Len]
        ;?????????? ??? ???????????
        @@WhileDelimiter:
                mov     al,     [si]
                call    IsDelimChar
                test     ah,     ah
                jz      @@NewWord
                inc     si
        loop    @@WhileDelimiter
        jcxz    @@Finish        ;???? ?????? ??????????? - ?????
        ;??????? ????? ?????
        @@NewWord:
        mov     dx,     0       ;????? ?????????? ????? ???? ????? 0
        push    si              ;????????? ? ????? ????? ?????? ?????
        ;?????????? ??? ????? ????? ?? ???????????
        @@WhileWord:
                mov     al,     [si]
                call    IsDelimChar
                or      ah,     ah
                jne     @@Break
        @@NextChar:
                inc     dx              ;??????????? ????? ?????
                inc     si              ;????????? ? ?????????? ???????
        loop    @@WhileWord
        @@Break:
        pop     di              ;????????? ?? ????? ????? ?????? ?????
        push    si
        push    cx
        mov     si,     di
        mov     cx,     dx
        lea     di,     [Pattern]
        mov     dx,     [PatternLen]
        call    StrCmp          ;???????? ????? ?? ????????? ?????????
        pop     cx
        pop     si
        cmp     al,     0
        je      @@Next
 
        ;??????? ????????? ?????
        push    si
        push    cx
        sub     si,     dx
        add     cx,     dx
        lea     di,     [InsWord]
        mov     dx,     [InsWordLen]
        call    Insert
        pop     cx
        pop     si
        ;????????? ????? ??????
        mov     ax,     [InsWordLen]
        add     [Len],  ax
        add     si,     ax
@@Next:
        jcxz    @@Finish
        jmp     @@WhileDelimiter
 
@@Finish:
        mov     ah,     09h
        lea     dx,     [Result]
        int     21h
 
        mov     ah,     40h
        lea     dx,     [String]
        mov     bx,     1
        mov     cx,     [Len]
        int     21h
 
        mov     ah,     09h
        lea     dx,     [CrLf]
        int     21h
 
        mov     ax,     4C00h
        ;int     21h
main    endp
 
;??????????, ??????????? ?? ?????? ? al ???????????? ????
;?? ?????
; al - ??????
;?? ??????
; ah -  0 (?? ???????????), 1 (???????????)
IsDelimChar     proc
        mov     ah,     0
        pushf
        push    si
        push    di
        push    cx
        push    es
 
        push    ds
        pop     es
        lea     di,     DelimChars
        mov     cx,     LenDelimChars
        cld
        repne   scasb
        jcxz    @@Skip
        jnz     @@Skip
        mov     ah,     1
@@Skip:
        pop     es
        pop     cx
        pop     di
        pop     si
        popf
        ret
IsDelimChar     endp
 
;???????? ????? ?? ????????? ?????????
;?? ?????:
; si - ????? ?????? ?????
; cx - ????? ??????
; di - ????? ?????? ??????
; dx - ????? ?????? ??????
;?? ??????:
; al=0 - ????? ?? ?????
;   =1 - ????? ?????
StrCmp   proc
        push    bx
        push    cx
        push    dx
        push    si
        push    di
 
        xor     bx,     bx
        cmp     cx,     dx
        jne     @@Exit
 
        @@for:
                mov     al,     [si]
                cmp     al,     [di]
                jne     @@Exit
                inc     si
                inc     di
        loop    @@for
        mov     bx,     1
@@Exit:
        mov     ax,     bx
        pop     di
        pop     si
        pop     dx
        pop     cx
        pop     bx
        ret
StrCmp  endp
 
;???????? ??????? ????? ? ?????? ??????
;?? ?????:
; si - ????? ?????? ??????
; cx - ????? ??????
; di - ????? ?????
; dx - ????? ?????
;?? ??????:
; al=0 - ????? ?? ?????
;   =1 - ????? ?????
Insert  proc
        pushf
        push    es
        push    ds
        pop     es
 
        push    si
        push    di
        push    cx
        add     si,     cx
        dec     si
        mov     di,     si
        add     di,     dx
        std
        rep     movsb
 
        pop     cx
        pop     si
        pop     di
        mov     cx,     dx
        cld
        rep     movsb
        pop     es
        popf
        ret
Insert  endp
 
end     main